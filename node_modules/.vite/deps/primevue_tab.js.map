{
  "version": 3,
  "sources": ["../../src/tab/style/TabStyle.js", "../../src/tab/BaseTab.vue", "../../src/tab/Tab.vue", "../../src/tab/Tab.vue?vue&type=template&id=bf1946e0&lang.js"],
  "sourcesContent": ["import BaseStyle from '@primevue/core/base/style';\n\nconst classes = {\n    root: ({ instance, props }) => [\n        'p-tab',\n        {\n            'p-tab-active': instance.active,\n            'p-disabled': props.disabled\n        }\n    ]\n};\n\nexport default BaseStyle.extend({\n    name: 'tab',\n    classes\n});\n", "<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport TabStyle from 'primevue/tab/style';\n\nexport default {\n    name: 'BaseTab',\n    extends: BaseComponent,\n    props: {\n        value: {\n            type: [String, Number],\n            default: undefined\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        as: {\n            type: [String, Object],\n            default: 'BUTTON'\n        },\n        asChild: {\n            type: Boolean,\n            default: false\n        }\n    },\n    style: TabStyle,\n    provide() {\n        return {\n            $pcTab: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n", "<template>\n    <component v-if=\"!asChild\" :is=\"as\" v-ripple :class=\"cx('root')\" @click=\"onClick\" v-bind=\"attrs\">\n        <slot></slot>\n    </component>\n    <slot v-else :class=\"cx('root')\" :active=\"active\" :a11yAttrs=\"a11yAttrs\" :onClick=\"onClick\"></slot>\n</template>\n\n<script>\nimport { getAttribute, focus, findSingle } from '@primeuix/utils/dom';\nimport { equals } from '@primeuix/utils/object';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\nimport BaseTab from './BaseTab.vue';\n\nexport default {\n    name: 'Tab',\n    extends: BaseTab,\n    inheritAttrs: false,\n    inject: ['$pcTabs', '$pcTabList'],\n    methods: {\n        onFocus() {\n            this.$pcTabs.selectOnFocus && this.changeActiveValue();\n        },\n        onClick() {\n            this.changeActiveValue();\n        },\n        onKeydown(event) {\n            switch (event.code) {\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                case 'Space':\n                    this.onEnterKey(event);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onArrowRightKey(event) {\n            const nextTab = this.findNextTab(event.currentTarget);\n\n            nextTab ? this.changeFocusedTab(event, nextTab) : this.onHomeKey(event);\n            event.preventDefault();\n        },\n        onArrowLeftKey(event) {\n            const prevTab = this.findPrevTab(event.currentTarget);\n\n            prevTab ? this.changeFocusedTab(event, prevTab) : this.onEndKey(event);\n            event.preventDefault();\n        },\n        onHomeKey(event) {\n            const firstTab = this.findFirstTab();\n\n            this.changeFocusedTab(event, firstTab);\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            const lastTab = this.findLastTab();\n\n            this.changeFocusedTab(event, lastTab);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView(this.findLastTab());\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView(this.findFirstTab());\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            this.changeActiveValue();\n            event.preventDefault();\n        },\n        findNextTab(tabElement, selfCheck = false) {\n            const element = selfCheck ? tabElement : tabElement.nextElementSibling;\n\n            return element ? (getAttribute(element, 'data-p-disabled') || getAttribute(element, 'data-pc-section') === 'inkbar' ? this.findNextTab(element) : findSingle(element, '[data-pc-name=\"tab\"]')) : null;\n        },\n        findPrevTab(tabElement, selfCheck = false) {\n            const element = selfCheck ? tabElement : tabElement.previousElementSibling;\n\n            return element ? (getAttribute(element, 'data-p-disabled') || getAttribute(element, 'data-pc-section') === 'inkbar' ? this.findPrevTab(element) : findSingle(element, '[data-pc-name=\"tab\"]')) : null;\n        },\n        findFirstTab() {\n            return this.findNextTab(this.$pcTabList.$refs.content.firstElementChild, true);\n        },\n        findLastTab() {\n            return this.findPrevTab(this.$pcTabList.$refs.content.lastElementChild, true);\n        },\n        changeActiveValue() {\n            this.$pcTabs.updateValue(this.value);\n        },\n        changeFocusedTab(event, element) {\n            focus(element);\n            this.scrollInView(element);\n        },\n        scrollInView(element) {\n            element?.scrollIntoView?.({ block: 'nearest' });\n        }\n    },\n    computed: {\n        active() {\n            return equals(this.$pcTabs?.d_value, this.value);\n        },\n        id() {\n            return `${this.$pcTabs?.id}_tab_${this.value}`;\n        },\n        ariaControls() {\n            return `${this.$pcTabs?.id}_tabpanel_${this.value}`;\n        },\n        attrs() {\n            return mergeProps(this.asAttrs, this.a11yAttrs, this.ptmi('root', this.ptParams));\n        },\n        asAttrs() {\n            return this.as === 'BUTTON' ? { type: 'button', disabled: this.disabled } : undefined;\n        },\n        a11yAttrs() {\n            return {\n                id: this.id,\n                tabindex: this.active ? this.$pcTabs.tabindex : -1,\n                role: 'tab',\n                'aria-selected': this.active,\n                'aria-controls': this.ariaControls,\n                'data-pc-name': 'tab',\n                'data-p-disabled': this.disabled,\n                'data-p-active': this.active,\n                onFocus: this.onFocus,\n                onKeydown: this.onKeydown\n            };\n        },\n        ptParams() {\n            return {\n                context: {\n                    active: this.active\n                }\n            };\n        }\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n", "<template>\n    <component v-if=\"!asChild\" :is=\"as\" v-ripple :class=\"cx('root')\" @click=\"onClick\" v-bind=\"attrs\">\n        <slot></slot>\n    </component>\n    <slot v-else :class=\"cx('root')\" :active=\"active\" :a11yAttrs=\"a11yAttrs\" :onClick=\"onClick\"></slot>\n</template>\n\n<script>\nimport { getAttribute, focus, findSingle } from '@primeuix/utils/dom';\nimport { equals } from '@primeuix/utils/object';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\nimport BaseTab from './BaseTab.vue';\n\nexport default {\n    name: 'Tab',\n    extends: BaseTab,\n    inheritAttrs: false,\n    inject: ['$pcTabs', '$pcTabList'],\n    methods: {\n        onFocus() {\n            this.$pcTabs.selectOnFocus && this.changeActiveValue();\n        },\n        onClick() {\n            this.changeActiveValue();\n        },\n        onKeydown(event) {\n            switch (event.code) {\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                case 'Space':\n                    this.onEnterKey(event);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onArrowRightKey(event) {\n            const nextTab = this.findNextTab(event.currentTarget);\n\n            nextTab ? this.changeFocusedTab(event, nextTab) : this.onHomeKey(event);\n            event.preventDefault();\n        },\n        onArrowLeftKey(event) {\n            const prevTab = this.findPrevTab(event.currentTarget);\n\n            prevTab ? this.changeFocusedTab(event, prevTab) : this.onEndKey(event);\n            event.preventDefault();\n        },\n        onHomeKey(event) {\n            const firstTab = this.findFirstTab();\n\n            this.changeFocusedTab(event, firstTab);\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            const lastTab = this.findLastTab();\n\n            this.changeFocusedTab(event, lastTab);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView(this.findLastTab());\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView(this.findFirstTab());\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            this.changeActiveValue();\n            event.preventDefault();\n        },\n        findNextTab(tabElement, selfCheck = false) {\n            const element = selfCheck ? tabElement : tabElement.nextElementSibling;\n\n            return element ? (getAttribute(element, 'data-p-disabled') || getAttribute(element, 'data-pc-section') === 'inkbar' ? this.findNextTab(element) : findSingle(element, '[data-pc-name=\"tab\"]')) : null;\n        },\n        findPrevTab(tabElement, selfCheck = false) {\n            const element = selfCheck ? tabElement : tabElement.previousElementSibling;\n\n            return element ? (getAttribute(element, 'data-p-disabled') || getAttribute(element, 'data-pc-section') === 'inkbar' ? this.findPrevTab(element) : findSingle(element, '[data-pc-name=\"tab\"]')) : null;\n        },\n        findFirstTab() {\n            return this.findNextTab(this.$pcTabList.$refs.content.firstElementChild, true);\n        },\n        findLastTab() {\n            return this.findPrevTab(this.$pcTabList.$refs.content.lastElementChild, true);\n        },\n        changeActiveValue() {\n            this.$pcTabs.updateValue(this.value);\n        },\n        changeFocusedTab(event, element) {\n            focus(element);\n            this.scrollInView(element);\n        },\n        scrollInView(element) {\n            element?.scrollIntoView?.({ block: 'nearest' });\n        }\n    },\n    computed: {\n        active() {\n            return equals(this.$pcTabs?.d_value, this.value);\n        },\n        id() {\n            return `${this.$pcTabs?.id}_tab_${this.value}`;\n        },\n        ariaControls() {\n            return `${this.$pcTabs?.id}_tabpanel_${this.value}`;\n        },\n        attrs() {\n            return mergeProps(this.asAttrs, this.a11yAttrs, this.ptmi('root', this.ptParams));\n        },\n        asAttrs() {\n            return this.as === 'BUTTON' ? { type: 'button', disabled: this.disabled } : undefined;\n        },\n        a11yAttrs() {\n            return {\n                id: this.id,\n                tabindex: this.active ? this.$pcTabs.tabindex : -1,\n                role: 'tab',\n                'aria-selected': this.active,\n                'aria-controls': this.ariaControls,\n                'data-pc-name': 'tab',\n                'data-p-disabled': this.disabled,\n                'data-p-active': this.active,\n                onFocus: this.onFocus,\n                onKeydown: this.onKeydown\n            };\n        },\n        ptParams() {\n            return {\n                context: {\n                    active: this.active\n                }\n            };\n        }\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n"],
  "mappings": "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",
  "names": ["classes", "root", "_ref", "instance", "props", "active", "disabled", "BaseStyle", "extend", "name", "name", "BaseComponent", "props", "value", "type", "String", "Number", "undefined", "disabled", "Boolean", "as", "Object", "asChild", "style", "TabStyle", "provide", "$pcTab", "$parentInstance", "script", "BaseTab", "inheritAttrs", "inject", "methods", "onFocus", "$pcTabs", "selectOnFocus", "changeActiveValue", "onClick", "onKeydown", "event", "code", "onArrowRightKey", "onArrowLeftKey", "onHomeKey", "onEndKey", "onPageDownKey", "onPageUpKey", "onEnterKey", "nextTab", "findNextTab", "currentTarget", "changeFocusedTab", "preventDefault", "prevTab", "findPrevTab", "firstTab", "findFirstTab", "lastTab", "findLastTab", "scrollInView", "tabElement", "selfCheck", "element", "nextElementSibling", "getAttribute", "findSingle", "previousElementSibling", "$pcTabList", "$refs", "content", "firstElementChild", "lastElementChild", "updateValue", "focus", "_element$scrollIntoVi", "scrollIntoView", "call", "block", "computed", "active", "_this$$pcTabs", "equals", "d_value", "id", "_this$$pcTabs2", "concat", "ariaControls", "_this$$pcTabs3", "attrs", "mergeProps", "asAttrs", "a11yAttrs", "ptmi", "ptParams", "tabindex", "role", "context", "directives", "ripple", "Ripple", "_ctx", "_createBlock", "_resolveDynamicComponent", "_mergeProps", "cx", "$options", "_renderSlot", "$slots"]
}
